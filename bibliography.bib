@inproceedings{10.1145/1979742.1979575,
author = {Deterding, Sebastian and Sicart, Miguel and Nacke, Lennart and O'Hara, Kenton and Dixon, Dan},
title = {Gamification. using game-design elements in non-gaming contexts},
year = {2011},
isbn = {9781450302685},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi-org.accedys2.bbtk.ull.es/10.1145/1979742.1979575},
doi = {10.1145/1979742.1979575},
abstract = {"Gamification" is an informal umbrella term for the use of video game elements in non-gaming systems to improve user experience (UX) and user engagement. The recent introduction of 'gamified' applications to large audiences promises new additions to the existing rich and diverse research on the heuristics, design patterns and dynamics of games and the positive UX they provide. However, what is lacking for a next step forward is the integration of this precise diversity of research endeavors. Therefore, this workshop brings together practitioners and researchers to develop a shared understanding of existing approaches and findings around the gamification of information systems, and identify key synergies, opportunities, and questions for future research.},
booktitle = {CHI '11 Extended Abstracts on Human Factors in Computing Systems},
pages = {2425–2428},
numpages = {4},
keywords = {persuasive technology, motivational affordances, gamification, games with a purpose, game design, funology, design patterns},
location = {Vancouver, BC, Canada},
series = {CHI EA '11}
}

@book{hoare1985communicating,
  added-at = {2023-06-15T08:47:29.000+0200},
  address = {Englewood Cliffs, New Jersey},
  author = {Hoare, C. A. R.},
  biburl = {https://www.bibsonomy.org/bibtex/2322c73e888e1e6f2ab4df3ab48682541/gdmcbain},
  interhash = {c57cff814bc63114c11e24864df0649c},
  intrahash = {322c73e888e1e6f2ab4df3ab48682541},
  keywords = {68-02-computer-science-research-exposition 68n01-software-general 68q45-formal-languages-and-automata 68q65-abstract-data-types-algebraic-specification 68q85-models-and-methods-for-concurrent-and-distributed-computing},
  publisher = {Prentice-Hall International},
  series = {Prentice-Hall International Series in Computer Science},
  timestamp = {2023-06-16T05:20:15.000+0200},
  title = {{Communicating Sequential Processes}},
  url = {http://www.usingcsp.com/cspbook.pdf},
  year = 1985
}


@article{10.1145/3231709,
author = {Mar\'{\i}n, B. and Frez, J. and Cruz-Lemus, J. and Genero, M.},
title = {An Empirical Investigation on the Benefits of Gamification in Programming Courses},
year = {2018},
issue_date = {March 2019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {19},
number = {1},
url = {https://doi-org.accedys2.bbtk.ull.es/10.1145/3231709},
doi = {10.1145/3231709},
abstract = {Context: Programming courses are compulsory for most engineering degrees, but students’ performance on these courses is often not as good as expected. Programming is difficult for students to learn, given that it includes a lot of new, complex, and abstract topics. All of this has led experts to the conclusion that new teaching techniques are required if students are to be motivated and engaged in learning on programming courses. Gamification has come to be an effective technique in education in general, and is especially useful in programming courses. This motivated us to develop an open source gamified platform, called UDPiler, for use in a programming course.Objective: The main goal of this article is to obtain empirical evidence on the improvement of students’ learning performance when using UDPiler in comparison to a non-gamified compiler.Method: A quasi-experiment was performed with two groups of first-year engineering students at Diego Portales University in Chile, using a non-gamified compiler and a gamified platform, respectively.Results: The results reveal that the students obtained better marks when the gamified platform was used to learn C programming. In addition, there is statistical significance in favor of there being a positive effect on the learning performance of those students who used the gamified platform.Conclusions: The results allow us to conclude that gamification is an encouraging approach with which to teach C programming, a finding that is aligned with previous empirical studies concerning gamification on programming courses, carried out in academic contexts. Nonetheless, we are aware that further validation is also required to corroborate and strengthen the findings obtained and to investigate whether the kind of gamified elements (mechanics, dynamics, and aesthetics) used have any influence on students’ performance, among other issues that deserve further investigation and that are explained throughout this article.},
journal = {ACM Trans. Comput. Educ.},
month = {nov},
articleno = {4},
numpages = {22},
keywords = {undergraduate education, quasi-experiment, programming courses, Gamification}
}
@inbook{Tu2014,
  title = {Gamification for Learning},
  ISBN = {9783319001524},
  url = {http://dx.doi.org/10.1007/978-3-319-00152-4_13},
  DOI = {10.1007/978-3-319-00152-4_13},
  booktitle = {Media Rich Instruction},
  publisher = {Springer International Publishing},
  author = {Tu,  Chih-Hsiung and Sujo-Montes,  Laura E. and Yen,  Cherng-Jyh},
  year = {2014},
  month = jun,
  pages = {203–217}
}
@inproceedings{Barata2013,
  series = {Gamification ’13},
  title = {Improving participation and learning with gamification},
  url = {http://dx.doi.org/10.1145/2583008.2583010},
  DOI = {10.1145/2583008.2583010},
  booktitle = {Proceedings of the First International Conference on Gameful Design,  Research,  and Applications},
  publisher = {ACM},
  author = {Barata,  Gabriel and Gama,  Sandra and Jorge,  Joaquim and Gon\c{c}alves,  Daniel},
  year = {2013},
  month = oct,
  collection = {Gamification ’13}
}
@article{Lister2015,
  title = {Gamification: The effect on student motivation and performance at the post-secondary level},
  volume = {3},
  ISSN = {2168-1325},
  url = {http://dx.doi.org/10.2458/AZU_ITET_V3I2_LISTER},
  DOI = {10.2458/azu_itet_v3i2_lister},
  number = {2},
  journal = {Issues and Trends in Educational Technology},
  publisher = {University of Arizona},
  author = {Lister,  Meaghan},
  year = {2015},
  month = dec 
}
@ARTICLE{gorace,
  author={Trinidad, Manuel and Calderón, Alejandro and Ruiz, Mercedes},
  journal={IEEE Access}, 
  title={GoRace: A Multi-Context and Narrative-Based Gamification Suite to Overcome Gamification Technological Challenges}, 
  year={2021},
  volume={9},
  number={},
  pages={65882-65905},
  keywords={Games;Software tools;Monitoring;Tools;Proposals;Object recognition;Flexibility;game elements;gamification;gamification process;gamification software tool;gamification technological challenges;multi-context;narrative;system-independence},
  doi={10.1109/ACCESS.2021.3076291}
}
@misc{githubAboutClassroom,
	author = {},
	title = {{A}bout {G}it{H}ub {C}lassroom - {G}it{H}ub {D}ocs},
	howpublished = {\url{https://docs.github.com/en/education/manage-coursework-with-github-classroom/get-started-with-github-classroom/about-github-classroom}},
	year = {},
	note = {[Accessed 03-05-2024]},
}
@misc{githubUnderstandingActions,
	author = {},
	title = {{U}nderstanding {G}it{H}ub {A}ctions - {G}it{H}ub {D}ocs},
	howpublished = {\url{https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions}},
	year = {},
	note = {[Accessed 03-05-2024]},
}
@misc{githubAutogradingClasroom,
	author = {},
	title = {{U}se autograding - {G}it{H}ub {D}ocs},
	howpublished = {\url{https://docs.github.com/en/education/manage-coursework-with-github-classroom/teach-with-github-classroom/use-autograding}},
	year = {},
	note = {[Accessed 03-05-2024]},
}
@article{EmpiricalBenefitProgramming,
author = {Mar\'{\i}n, B. and Frez, J. and Cruz-Lemus, J. and Genero, M.},
title = {An Empirical Investigation on the Benefits of Gamification in Programming Courses},
year = {2018},
issue_date = {March 2019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {19},
number = {1},
url = {https://doi.org/10.1145/3231709},
doi = {10.1145/3231709},
abstract = {Context: Programming courses are compulsory for most engineering degrees, but students’ performance on these courses is often not as good as expected. Programming is difficult for students to learn, given that it includes a lot of new, complex, and abstract topics. All of this has led experts to the conclusion that new teaching techniques are required if students are to be motivated and engaged in learning on programming courses. Gamification has come to be an effective technique in education in general, and is especially useful in programming courses. This motivated us to develop an open source gamified platform, called UDPiler, for use in a programming course.Objective: The main goal of this article is to obtain empirical evidence on the improvement of students’ learning performance when using UDPiler in comparison to a non-gamified compiler.Method: A quasi-experiment was performed with two groups of first-year engineering students at Diego Portales University in Chile, using a non-gamified compiler and a gamified platform, respectively.Results: The results reveal that the students obtained better marks when the gamified platform was used to learn C programming. In addition, there is statistical significance in favor of there being a positive effect on the learning performance of those students who used the gamified platform.Conclusions: The results allow us to conclude that gamification is an encouraging approach with which to teach C programming, a finding that is aligned with previous empirical studies concerning gamification on programming courses, carried out in academic contexts. Nonetheless, we are aware that further validation is also required to corroborate and strengthen the findings obtained and to investigate whether the kind of gamified elements (mechanics, dynamics, and aesthetics) used have any influence on students’ performance, among other issues that deserve further investigation and that are explained throughout this article.},
journal = {ACM Trans. Comput. Educ.},
month = {nov},
articleno = {4},
numpages = {22},
keywords = {Gamification, programming courses, quasi-experiment, undergraduate education}
}
@misc{dungeonsanddevelopers,
	author = {},
	title = {{D}ungeons \& {D}evelopers},
	howpublished = {\url{http://www.dungeonsanddevelopers.com/}},
	year = {},
	note = {[Accessed 07-05-2024]},
}
@article{ZHAN2022100096,
title = {The effectiveness of gamification in programming education: Evidence from a meta-analysis},
journal = {Computers and Education: Artificial Intelligence},
volume = {3},
pages = {100096},
year = {2022},
issn = {2666-920X},
doi = {https://doi.org/10.1016/j.caeai.2022.100096},
url = {https://www.sciencedirect.com/science/article/pii/S2666920X22000510},
author = {Zehui Zhan and Luyao He and Yao Tong and Xinya Liang and Shihao Guo and Xixin Lan},
keywords = {Programming education, Gamification, Meta-analysis, Game-based learning},
abstract = {This paper aimed at constructing a systematic framework and examining the effect of gamification in programming education through a meta-analysis conducted on 21 empirical studies published in the last decade. We examined the effects of game types, gamification applications, pedagogical agents, programming types, and schooling levels on students' academic achievement, cognitive load, motivation, and thinking skills in programming education by cross-tabulation analysis. Results verified the positive impact of gamification in programming education. Gamification has the largest effect on students' motivation, followed by academic achievement, whereas it has the least effect on students' cognitive load. As for game types, the reasoning strategy game is most effective on academic achievement, while the puzzle game is most effective on motivation. As for gamification application, the games as a competitive mechanism has the greatest impact on students’ thinking skills and motivation. However, when games were adopted as teaching tools or student works, the effects are mainly represented in academic achievement. Pedagogical agents have a limited effect on programming education. With regard to programming types, the effect of gamification is more pronounced in text-based programming rather than graphical programming. This study provided an analytic framework and shed light on potential directions for further studies in the field.}
}
@misc{biworldwideAboutBunchball,
	author = {},
	title = {{A}bout {B}unchball | {B}{I} {W}{O}{R}{L}{D}{W}{I}{D}{E}},
	howpublished = {\url{https://www.biworldwide.com/about-us/about-bunchball/}},
	year = {},
	note = {[Accessed 07-05-2024]},
}
@article{MEdit4CEP-Gam,
title = {MEdit4CEP-Gam: A model-driven approach for user-friendly gamification design, monitoring and code generation in CEP-based systems},
journal = {Information and Software Technology},
volume = {95},
pages = {238-264},
year = {2018},
issn = {0950-5849},
doi = {https://doi.org/10.1016/j.infsof.2017.11.009},
url = {https://www.sciencedirect.com/science/article/pii/S0950584917303464},
author = {Alejandro Calderón and Juan Boubeta-Puig and Mercedes Ruiz},
keywords = {Gamification, Model-Driven Engineering, Complex event processing, Strategy design, Monitoring, Graphical modelling editor},
abstract = {Context
Gamification has been proven to increase engagement and motivation in multiple and different non-game contexts such as healthcare, education, workplace, and marketing, among others. However, many of these applications fail to achieve the desired benefits of gamification, mainly because of a poor design.
Objective
This paper explores the conceptualization, implementation and monitoring phases of meaningful gamification strategies and proposes a solution for strategy experts that hides the implementation details and helps them focus only on what is crucial for the success of the strategy. The solution makes use of Model-Driven Engineering (MDE) and Complex Event Processing (CEP) technology.
Method
An easy-to-use graphical editor is used to provide the high-level models that represent the design of the gamification strategy and its deployment and monitoring. These models contain the event pattern definitions to be automatically transformed into code. This code is then deployed both in a CEP engine to detect the conditions expressed in such patterns and in an enterprise service bus to execute the corresponding pattern actions.
Results
The paper reports on the use of both a graphical modeling editor for gamification domain definition and a graphical modeling editor for gamification strategy design, monitoring and code generation in event-based systems. It also shows how the proposal can be used to design and automate the implementation and monitoring of a gamification strategy in an educational domain supported by a well-known Learning Management System (LMS) such as Moodle.
Conclusion
It can be concluded that this unprecedented model-driven approach leveraging gamification and CEP technology provides strategy experts with the ability to graphically define gamification strategies, which can be directly transformed into code executable by event-based systems. Therefore, this is a novel solution for bringing CEP closer to any strategy expert, positively influencing the gamification strategy design, implementation and real-time monitoring processes.}
}
@misc{gitlabWhatVersion,
	author = {},
	title = {{W}hat is version control? --- about.gitlab.com},
	howpublished = {\url{https://about.gitlab.com/topics/version-control/}},
	year = {},
	note = {[Accessed 14-05-2024]},
}
@misc{githubAboutGitHub,
	author = {},
	title = {{A}bout {G}it{H}ub and {G}it - {G}it{H}ub {D}ocs --- docs.github.com},
	howpublished = {\url{https://docs.github.com/en/get-started/start-your-journey/about-github-and-git}},
	year = {},
	note = {[Accessed 14-05-2024]},
}
@misc{ClassroomAPI,
	author = {},
	title = {{R}{E}{S}{T} {A}{P}{I} endpoints for {G}it{H}ub {C}lassroom - {G}it{H}ub {D}ocs --- docs.github.com},
	howpublished = {\url{https://docs.github.com/en/rest/classroom/classroom?apiVersion=2022-11-28}},
	year = {},
	note = {[Accessed 14-05-2024]},
}
@misc{githubAPI,
	author = {},
	title = {{A}bout the {R}{E}{S}{T} {A}{P}{I} - {G}it{H}ub {D}ocs --- docs.github.com},
	howpublished = {\url{https://docs.github.com/en/rest/about-the-rest-api/about-the-rest-api?apiVersion=2022-11-28}},
	year = {},
	note = {[Accessed 14-05-2024]},
}
@misc{githubAboutApps,
	author = {},
	title = {{A}bout creating {G}it{H}ub {A}pps - {G}it{H}ub {D}ocs --- docs.github.com},
	howpublished = {\url{https://docs.github.com/en/apps/creating-github-apps/about-creating-github-apps/about-creating-github-apps}},
	year = {},
	note = {[Accessed 14-05-2024]},
}
@misc{mozillaEvolutionHTTP,
	author = {},
	title = {{E}volution of {H}{T}{T}{P} - {H}{T}{T}{P} | {M}{D}{N} --- developer.mozilla.org},
	howpublished = {\url{https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Evolution_of_HTTP#post-http2_evolution}},
	year = {},
	note = {[Accessed 18-06-2024]},
}
@misc{redhatWhatWebhook,
	author = {},
	title = {{W}hat is a webhook? --- redhat.com},
	howpublished = {\url{https://www.redhat.com/en/topics/automation/what-is-a-webhook}},
	year = {},
	note = {[Accessed 19-06-2024]},
}
@misc{mozillaWhatURL,
	author = {},
	title = {{W}hat is a {U}{R}{L}? - {L}earn web development | {M}{D}{N} --- developer.mozilla.org},
	howpublished = {\url{https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_URL}},
	year = {},
	note = {[Accessed 19-06-2024]},
}
@misc{githubGitHubEducationautograding,
	author = {},
	title = {{G}it{H}ub - education/autograding: {G}it{H}ub {E}ducation {A}uto-grading and {F}eedback for {G}it{H}ub {C}lassroom --- github.com},
	howpublished = {\url{https://github.com/education/autograding}},
	year = {},
	note = {[Accessed 19-06-2024]},
}
@misc{nodejs,
	author = {},
	title = {{N}ode.js — {R}un {J}ava{S}cript {E}verywhere --- nodejs.org},
	howpublished = {\url{https://nodejs.org/en}},
	year = {},
	note = {[Accessed 19-06-2024]},
}
@misc{typescript,
	author = {},
	title = {{J}ava{S}cript {W}ith {S}yntax {F}or {T}ypes. --- typescriptlang.org},
	howpublished = {\url{https://www.typescriptlang.org/}},
	year = {},
	note = {[Accessed 19-06-2024]},
}
@manual{exitcode,
 title      = {exit(1p) — POSIX Programmer's Manual — Linux manual page},
 author    = {Institute of Electrical and Electronics Engineers and The Open Group},
 year       = "2018",
}
@misc{jsonJSON,
	author = {},
	title = {{J}{S}{O}{N} --- json.org},
	howpublished = {\url{https://www.json.org/json-es.html}},
	year = {},
	note = {[Accessed 19-06-2024]},
}
@techreport{ecma262,
type = {Standard},
key = {ECMA-262},
author = {Technical Committee 39},
month = jun,
year = {2023},
title = {{ECMAScript® 2023 language specification}},
volume = {14},
institution = {Ecma International}
}
@misc{rfc2104,
    series =    {Request for Comments},
    number =    2104,
    howpublished =  {RFC 2104},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC2104},
    url =       {https://www.rfc-editor.org/info/rfc2104},
    author =    {Dr. Hugo Krawczyk and Mihir Bellare and Ran Canetti},
    title =     {{HMAC: Keyed-Hashing for Message Authentication}},
    pagetotal = 11,
    year =      1997,
    month =     feb,
    abstract =  {This document describes HMAC, a mechanism for message authentication using cryptographic hash functions. HMAC can be used with any iterative cryptographic hash function, e.g., MD5, SHA-1, in combination with a secret shared key. The cryptographic strength of HMAC depends on the properties of the underlying hash function. This memo provides information for the Internet community. This memo does not specify an Internet standard of any kind},
}
@book{Dang2015,
  title = {Secure Hash Standard},
  url = {http://dx.doi.org/10.6028/NIST.FIPS.180-4},
  DOI = {10.6028/nist.fips.180-4},
  institution = {National Institute of Standards and Technology},
  author = {Dang,  Quynh H.},
  year = {2015},
  publisher = {National Institute of Standards and Technology},
  month = jul 
}
@misc{rfc7231,
    series =    {Request for Comments},
    number =    7231,
    howpublished =  {RFC 7231},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC7231},
    url =       {https://www.rfc-editor.org/info/rfc7231},
    author =    {Roy T. Fielding and Julian Reschke},
    title =     {{Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content}},
    pagetotal = 101,
    year =      2014,
    month =     jun,
    abstract =  {The Hypertext Transfer Protocol (HTTP) is a stateless \textbackslash{}\%application- level protocol for distributed, collaborative, hypertext information systems. This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.},
}
@misc{githubWebhookEvents,
	author = {},
	title = {{W}ebhook events and payloads - {G}it{H}ub {D}ocs --- docs.github.com},
	howpublished = {\url{https://docs.github.com/en/webhooks/webhook-events-and-payloads#workflow_run}},
	year = {},
	note = {[Accessed 19-06-2024]},
}
@misc{githubValidatingWebhook,
	author = {},
	title = {{V}alidating webhook deliveries - {G}it{H}ub {D}ocs --- docs.github.com},
	howpublished = {\url{https://docs.github.com/en/webhooks/using-webhooks/validating-webhook-deliveries}},
	year = {},
	note = {[Accessed 19-06-2024]},
}
@misc{goProgrammingLanguage,
	author = {},
	title = {{T}he {G}o {P}rogramming {L}anguage --- go.dev},
	howpublished = {\url{https://go.dev/}},
	year = {},
	note = {[Accessed 19-06-2024]},
}
@misc{stackoverflowWhatapossGreat,
	author = {},
	title = {{W}hat\&apos;s so great about {G}o? - {S}tack {O}verflow --- stackoverflow.blog},
	howpublished = {\url{https://stackoverflow.blog/2020/11/02/go-golang-learn-fast-programming-languages/}},
	year = {},
	note = {[Accessed 20-06-2024]},
}
@misc{golangGuideGarbage,
	author = {},
	title = {{A} {G}uide to the {G}o {G}arbage {C}ollector - {T}he {G}o {P}rogramming {L}anguage --- tip.golang.org},
	howpublished = {\url{https://tip.golang.org/doc/gc-guide}},
	year = {},
	note = {[Accessed 20-06-2024]},
}
@misc{githubGitHubClicli,
	author = {},
	title = {{G}it{H}ub - cli/cli: {G}it{H}ub’s official command line tool --- github.com},
	howpublished = {\url{https://github.com/cli/cli}},
	year = {},
	note = {[Accessed 20-06-2024]},
}
@misc{goFAQOOP,
	author = {},
	title = {{F}requently {A}sked {Q}uestions ({F}{A}{Q}) - {T}he {G}o {P}rogramming {L}anguage --- go.dev},
	howpublished = {\url{https://go.dev/doc/faq#Is_Go_an_object-oriented_language}},
	year = {},
	note = {[Accessed 20-06-2024]},
}
@misc{goCodewalkFirstClass,
	author = {},
	title = {{C}odewalk: {F}irst-{C}lass {F}unctions in {G}o - {T}he {G}o {P}rogramming {L}anguage --- go.dev},
	howpublished = {\url{https://go.dev/doc/codewalk/functions/}},
	year = {},
	note = {[Accessed 20-06-2024]},
}
@misc{universitetetiosloTrygveMVC,
	author = {},
	title = {{T}rygve/{M}{V}{C} --- folk.universitetetioslo.no},
	howpublished = {\url{https://folk.universitetetioslo.no/trygver/themes/mvc/mvc-index.html}},
	year = {},
	note = {[Accessed 20-06-2024]},
}
@misc{cockburnHexagonalArchitecture,
	author = {},
	title = {{H}exagonal architecture --- alistair.cockburn.us},
	howpublished = {\url{https://alistair.cockburn.us/hexagonal-architecture/}},
	year = {},
	note = {[Accessed 20-06-2024]},
}
@book{Martin2002-yw,
  title     = "Agile software development, principles, patterns, and practices",
  author    = "Martin, Robert C",
  publisher = "Pearson",
  series    = "Alan Apt series",
  month     =  oct,
  year      =  2002,
  address   = "Upper Saddle River, NJ",
  language  = "en"
}
@BOOK{Fowler2002-bt,
  title     = "Patterns of Enterprise Application Architecture",
  author    = "Fowler, Martin",
  publisher = "Addison-Wesley Educational",
  series    = "The Addison-Wesley signature series",
  month     =  nov,
  year      =  2002,
  address   = "Boston, MA",
  language  = "en"
}
@misc{mvcs,
	author = {Anshuman Kumar},
	title = {{A}n {I}ntroduction to {M}{V}{C}{S} {A}rchitecture},
	howpublished = {\url{https://quantiphi.com/an-introduction-to-mvcs-architecture/}},
	year = {},
	note = {[Accessed 27-06-2024]},
}
@misc{goPackageNames,
	author = {Sameer Ajmani},
	title = {{P}ackage names - {T}he {G}o {P}rogramming {L}anguage --- go.dev},
	howpublished = {\url{https://go.dev/blog/package-names}},
	year = {2015},
	note = {[Accessed 27-06-2024]},
}
@misc{githubRESTEmail,
	author = {},
	title = {{R}{E}{S}{T} {A}{P}{I} endpoints for emails - {G}it{H}ub {D}ocs --- docs.github.com},
	howpublished = {\url{https://docs.github.com/en/rest/users/emails?apiVersion=2022-11-28#list-email-addresses-for-the-authenticated-user}},
	year = {},
	note = {[Accessed 02-07-2024]},
}
@misc{REST,
	author = {Roy Thomas Fielding},
	title = { {F}ielding {D}issertation: {C}{H}{A}{P}{T}{E}{R} 5: {R}epresentational {S}tate {T}ransfer ({R}{E}{S}{T})  --- ics.uci.edu},
	howpublished = {\url{https://ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm}},
	year = {2000},
	note = {[Accessed 02-07-2024]},
}
@misc{jsonschemaJSONSchema,
	author = {},
	title = {{J}{S}{O}{N} {S}chema - 2020-12 {R}elease {N}otes --- json-schema.org},
	howpublished = {\url{https://json-schema.org/draft/2020-12/release-notes}},
	year = {2020},
	note = {[Accessed 03-07-2024]},
}
@misc{rfc9110,
    series =    {Request for Comments},
    number =    9110,
    howpublished =  {RFC 9110},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC9110},
    url =       {https://www.rfc-editor.org/info/rfc9110},
    author =    {Roy T. Fielding and Mark Nottingham and Julian Reschke},
    title =     {{HTTP Semantics}},
    pagetotal = 194,
    year =      2022,
    month =     jun,
    abstract =  {The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes. This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.},
}
@misc{rfc9457,
    series =    {Request for Comments},
    number =    9457,
    howpublished =  {RFC 9457},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC9457},
    url =       {https://www.rfc-editor.org/info/rfc9457},
    author =    {Mark Nottingham and Erik Wilde and Sanjay Dalal},
    title =     {{Problem Details for HTTP APIs}},
    pagetotal = 16,
    year =      2023,
    month =     jul,
    abstract =  {This document defines a "problem detail" to carry machine-readable details of errors in HTTP response content to avoid the need to define new error response formats for HTTP APIs. This document obsoletes RFC 7807.},
}
@misc{openapisOpenAPISpecification,
	author = {},
	title = {{O}pen{A}{P}{I} {S}pecification v3.1.0 | {I}ntroduction, {D}efinitions, \&amp; {M}ore --- spec.openapis.org},
	howpublished = {\url{https://spec.openapis.org/oas/v3.1.0}},
	year = {},
	note = {[Accessed 03-07-2024]},
}
@misc{sqliteAboutSQLite,
	author = {},
	title = {{A}bout {S}{Q}{L}ite --- sqlite.org},
	howpublished = {\url{https://www.sqlite.org/about.html}},
	year = {},
	note = {[Accessed 03-07-2024]},
}
@BOOK{Beaulieu2009-jq,
  title     = "Learning {SQL}",
  author    = "Beaulieu, Alan",
  publisher = "O'Reilly Media",
  edition   =  2,
  month     =  may,
  year      =  2009,
  address   = "Sebastopol, CA",
  language  = "en"
}

@misc{goDevelopmentCLI,
	author = {},
	title = {{C}ommand-line {I}nterfaces ({C}{L}{I}s) - {T}he {G}o {P}rogramming {L}anguage --- go.dev},
	howpublished = {\url{https://go.dev/solutions/clis#key-benefits}},
	year = {},
	note = {[Accessed 03-07-2024]},
}
@misc{goCGo,
	author = {},
	title = {cgo command - cmd/cgo - {G}o {P}ackages --- pkg.go.dev},
	howpublished = {\url{https://pkg.go.dev/cmd/cgo}},
	year = {},
	note = {[Accessed 03-07-2024]},
}

@misc{ociFAQ,
	author = {},
	title = {{F}{A}{Q} - {O}pen {C}ontainer {I}nitiative --- opencontainers.org},
	howpublished = {\url{https://opencontainers.org/faq/#what-has-docker-done-to-help-create-this-foundation}},
	year = {},
	note = {[Accessed 03-07-2024]},
}
@misc{podmanWhatPodman,
	author = {},
	title = {{W}hat is {P}odman? {P}odman documentation --- docs.podman.io},
	howpublished = {\url{https://docs.podman.io/en/v5.1.1/}},
	year = {},
	note = {[Accessed 04-07-2024]},
}
@misc{podmandesktopIntroductionPodman,
	author = {},
	title = {{I}ntroduction | {P}odman {D}esktop --- podman-desktop.io},
	howpublished = {\url{https://podman-desktop.io/docs/intro}},
	year = {},
	note = {[Accessed 04-07-2024]},
}
@misc{mobyReadme,
	author = {},
	title = {moby/{R}{E}{A}{D}{M}{E}.md at moby/moby --- github.com},
	howpublished = {\url{https://github.com/moby/moby/blob/81ccfd44e4fa451d18bdc538ff731b11b4064040/README.md}},
	year = {2022},
	note = {[Accessed 04-07-2024]},
}
@misc{dockerDockerDesktop,
	author = {},
	title = {{D}ocker {D}esktop --- docker.com},
	howpublished = {\url{https://www.docker.com/products/docker-desktop/}},
	year = {},
	note = {[Accessed 04-07-2024]},
}
@misc{rancherdesktopIntroductionRancher,
	author = {},
	title = {{I}ntroduction | {R}ancher {D}esktop {D}ocs --- docs.rancherdesktop.io},
	howpublished = {\url{https://docs.rancherdesktop.io/}},
	year = {},
	note = {[Accessed 04-07-2024]},
}
@misc{dockerAdrianMouat,
	author = {},
	title = {{A}drian {M}ouat --- docker.com},
	howpublished = {\url{https://www.docker.com/captains/adrian-mouat/}},
	year = {},
	note = {[Accessed 04-07-2024]},
}
@book{Mouat2015-uh,
  title    = "Using docker",
  author   = "Mouat, Adrian",
  publisher = {O'Reilly Media, Inc.},
  year     =  2015,
  language = "en"
}
@book{Hunt1999-sb,
  title     = "The pragmatic programmer",
  author    = "Hunt, Andrew and Thomas, David",
  publisher = "Addison Wesley",
  month     =  oct,
  year      =  1999,
  address   = "Boston, MA",
  language  = "en"
}
@misc{dockerDockerEngine,
	author = {},
	title = {{D}ocker {E}ngine overview --- docs.docker.com},
	howpublished = {\url{https://docs.docker.com/engine/}},
	year = {},
	note = {[Accessed 05-07-2024]},
}
@misc{githubGitHubContainerdnerdctl,
	author = {},
	title = {containerd/nerdctl: contai{N}{E}{R}{D} {C}{T}{L} - {D}ocker-compatible {C}{L}{I} for containerd, with support for {C}ompose, {R}ootless, e{S}targz, {O}{C}{I}crypt, {I}{P}{F}{S}, ... --- github.com},
	howpublished = {\url{https://github.com/containerd/nerdctl}},
	year = {},
	note = {[Accessed 05-07-2024]},
}
@techreport{ociDistribution,
type = {Standard},
key = {OCI Distribution Specification},
author = {Open Container Initiative},
month = feb,
year = {2024},
title = {{Open Container Initiative Distribution Specification}},
volume = {1.1},
institution = {Open Container Initiative}
}
@misc{installGo,
	author = {},
	title = {{D}ownload and install - {T}he {G}o {P}rogramming {L}anguage --- go.dev},
	howpublished = {\url{https://go.dev/doc/install}},
	year = {},
	note = {[Accessed 05-07-2024]},
}
@misc{ullplNextraNext,
	author = {},
	title = {{N}extra: the next docs builder --- ull-pl.vercel.app},
	howpublished = {\url{https://ull-pl.vercel.app/}},
	year = {},
	note = {[Accessed 06-07-2024]},
}
@misc{caddyserverWelcomeCaddy,
	author = {Caddy Web Server},
	title = {{W}elcome - {C}addy {D}ocumentation --- caddyserver.com},
	howpublished = {\url{https://caddyserver.com/docs/}},
	year = {},
	note = {[Accessed 06-07-2024]},
}
@misc{githubGitHubClaudio4GH2GR,
	author = {},
	title = {{G}it{H}ub - claudio4/gorace-gh-integration --- github.com},
	howpublished = {\url{https://github.com/claudio4/gorace-gh-integration}},
	year = {},
}